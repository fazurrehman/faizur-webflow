// https://skalman.github.io/UglifyJS-online/
gsap.registerPlugin(ScrollTrigger); const lenis = new Lenis; function raf(e) { lenis.raf(e), requestAnimationFrame(raf) } lenis.on("scroll", e => { console.log(e) }), requestAnimationFrame(raf); const animationConfig = { duration: 5, x: "-125%", repeat: -1, ease: "linear" }, marqueeContainer = document.querySelector(".js-btn-loop"); gsap.to(marqueeContainer, { ...animationConfig }); const accSettings = { speed: 500, oneOpen: !0, offsetAnchor: !0, offsetFromTop: 180, scrollTopDelay: 400, classes: { accordion: "js-accordion", header: "js-accordion-header", item: "js-accordion-item", body: "js-accordion-body", icon: "js-accordion-icon", active: "active" } }, prefix = accSettings.classes, accordion = function () { const e = $(`.${prefix.accordion}`), t = e.find(`.${prefix.header}`), o = $(`.${prefix.item}`), n = $(`.${prefix.body}`), r = ($(`.${prefix.icon}`), prefix.active); return { init: function (e) { t.on("click", function () { accordion.toggle($(this)), accSettings.offsetAnchor && setTimeout(() => { $("html").animate({ scrollTop: $(this).offset().top - accSettings.offsetFromTop }, accSettings.speed) }, accSettings.scrollTopDelay) }), $.extend(accSettings, e), e.oneOpen && $(`.${prefix.item}.${r}`).length > 1 && $(`.${prefix.item}.${r}:not(:first)`).removeClass(r).find(`.${prefix.header} > .${prefix.icon}`).removeClass(r), $(`.${prefix.item}.${r}`).find(`> .${prefix.body}`).show() }, toggle: function (t) { accSettings.oneOpen && t[0] != t.closest(e).find(`> .${prefix.item}.${r} > .${prefix.header}`)[0] && (t.closest(e).find(`> .${prefix.item}`).removeClass(r).find(n).slideUp(accSettings.speed), t.closest(e).find(`> .${prefix.item}`).find(`> .${prefix.header} > .${prefix.icon}`).removeClass(r)), t.closest(o).toggleClass(`${r}`).find(`> .${prefix.header} > .${prefix.icon}`).toggleClass(r), t.next().stop().slideToggle(accSettings.speed) } } }(); function updatePragueTime() { const e = (new Date).toLocaleString("en-US", { hour: "numeric", minute: "numeric", hour12: !0, timeZone: "Europe/Prague" }); document.getElementById("time").textContent = e } function getWeather() { fetch("https://api.openweathermap.org/data/2.5/weather?q=Prague&appid=d1e52eafe56386f1439142c04afc5b44").then(e => e.json()).then(e => { const t = (e.main.temp - 273.15).toFixed(1); document.getElementById("temperature").textContent = `${t}Â°C`, document.getElementById("weather-icon").src = getWeatherIcon(e.weather[0].main) }).catch(e => { console.error("Error fetching weather data:", e), document.getElementById("temperature").textContent = "Temperature data unavailable" }) } function getWeatherIcon(e) { switch (e) { case "Clear": return "https://res.cloudinary.com/fazurrehman/image/upload/v1697663904/weather-icon/clear.svg"; case "Clouds": return "https://res.cloudinary.com/fazurrehman/image/upload/v1697663904/weather-icon/clouds.svg"; case "Rain": return "https://res.cloudinary.com/fazurrehman/image/upload/v1697663905/weather-icon/rain.svg"; case "Snow": return "https://res.cloudinary.com/fazurrehman/image/upload/v1697663904/weather-icon/snow.svg"; default: return "https://res.cloudinary.com/fazurrehman/image/upload/v1697663904/weather-icon/clear.svg" } } $(document).ready(function () { accordion.init(accSettings) }), document.addEventListener("DOMContentLoaded", function () { const e = document.getElementById("copyButton"), t = document.querySelector(".btn_copied"), o = ["m", "e", "@", "f", "a", "i", "z", "u", "r", ".", "c", "o", "m"].join(""); let n = !1; e.addEventListener("click", function () { if (!n) { const e = document.createElement("input"); e.value = o, document.body.appendChild(e), e.select(), document.execCommand("copy"), document.body.removeChild(e), t.textContent = "Email Copied", n = !0 } }), e.addEventListener("mouseout", function () { n && setTimeout(function () { t.textContent = "Copy Email", n = !1 }, 200) }) }), updatePragueTime(), getWeather(), setInterval(updatePragueTime, 1e3), setInterval(getWeather, 6e5); const logoTimeline = gsap.timeline(); logoTimeline.from(".footer_logo", { skewY: -10, y: 500, duration: .8, ease: "power2.out" }), logoTimeline.to(".footer_logo", { skewY: 0, y: 0, duration: .8, ease: "power2.out" }), ScrollTrigger.create({ animation: logoTimeline, trigger: ".footer", start: "top 50%", end: "bottom top" }); const splitTypes = document.querySelectorAll(".reveal-headline"); splitTypes.forEach((e, t) => { const o = new SplitType(e, { types: "words" }); gsap.fromTo(o.words, { opacity: 0, y: 50, transformOrigin: "top" }, { opacity: 1, y: 0, duration: .3, stagger: .02, duration: .5, scrollTrigger: { trigger: e, start: "top 90%", end: "top 20%", scrub: !1 } }) });